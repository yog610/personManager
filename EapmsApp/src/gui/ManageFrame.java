/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import action.DepartmentAction;
import action.TeacherAction;
import infobean.DepartmentInfoBean;
import infobean.TeacherInfoBean;
import dao.User;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author reqaw
 */
public class ManageFrame extends javax.swing.JFrame implements ListSelectionListener{

    /**
     * Creates new form ManageFrame
     */
    ArrayList teacherList = null;
    ArrayList departmentlist = null;
    User user = null;
    //声明JTable的ListSelectionModel模型
    ListSelectionModel selectionMode = null;
    String department = "1"; 
    
    public ManageFrame(User user) {
        initComponents();
        int windowWidth = this.getWidth(); //获得窗口宽

        int windowHeight = this.getHeight(); //获得窗口高

        Toolkit kit = Toolkit.getDefaultToolkit(); //定义工具包

        Dimension screenSize = kit.getScreenSize(); //获取屏幕的尺寸

        int screenWidth = screenSize.width; //获取屏幕的宽

        int screenHeight = screenSize.height; //获取屏幕的高

        this.setLocation(screenWidth / 2 - windowWidth / 2, screenHeight / 2 - windowHeight / 2);//设置窗口居中显示
        sayHello(user);
        this.departmentlist = initDepartComboBox();
        this.teacherList = initTeacherTable();
        
    }
    public void sayHello(User user){
        sayHelloL1.setText("账户为：" + user.getUserID() + " 的老师您好，");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        selectDepartmentComboB = new javax.swing.JComboBox<>();
        selectDepartL = new javax.swing.JLabel();
        jScrollPaneTeacherInfo = new javax.swing.JScrollPane();
        TeacherInfoT = new javax.swing.JTable();
        sayHelloL2 = new javax.swing.JLabel();
        sayHelloL1 = new javax.swing.JLabel();
        inputTeacherIdL = new javax.swing.JLabel();
        inputTeacherIdT = new javax.swing.JTextField();
        idQueryB = new javax.swing.JButton();
        teacherIDL = new javax.swing.JLabel();
        teacherIDT = new javax.swing.JTextField();
        teacherSchoolL = new javax.swing.JLabel();
        teacherSchoolT = new javax.swing.JTextField();
        techarIndateL = new javax.swing.JLabel();
        techarIndateT = new javax.swing.JTextField();
        techarNameL = new javax.swing.JLabel();
        techarNameT = new javax.swing.JTextField();
        techarTechL = new javax.swing.JLabel();
        techarTechT = new javax.swing.JTextField();
        teacherDepartL = new javax.swing.JLabel();
        teacherDepartT = new javax.swing.JTextField();
        teachBirthdayL = new javax.swing.JLabel();
        teachBirthdayT = new javax.swing.JTextField();
        teacherAddressL = new javax.swing.JLabel();
        teacherAddressT = new javax.swing.JTextField();
        teacherDutyL = new javax.swing.JLabel();
        teacherDutyT = new javax.swing.JTextField();
        teacherSexL = new javax.swing.JLabel();
        teacherSexT = new javax.swing.JTextField();
        addTeacherB = new javax.swing.JButton();
        delTeacherB = new javax.swing.JButton();
        modifyTeacherB = new javax.swing.JButton();
        ExitManagementB = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectDepartmentComboB.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        selectDepartmentComboB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "全部", "党委办公室", "组织部", "宣传部", "统战部", "纪委办公室", "校长办公室", "发展规划处", "教务处", "科研处", "学生处", "研究生处", "招生就业处", "人事处", "财务处", "国际交流处", "基建处", "财产管理处", "后勤处", "监察处", "审计处", "离退处", "保卫处", "网络中心", "图书馆", "校工会", "校团委" }));
        selectDepartmentComboB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDepartmentComboBActionPerformed(evt);
            }
        });

        selectDepartL.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        selectDepartL.setText("按部门查询：");

        jScrollPaneTeacherInfo.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N

        TeacherInfoT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "员工编号", "姓名", "性别", "毕业院校", "专业"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneTeacherInfo.setViewportView(TeacherInfoT);

        sayHelloL2.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        sayHelloL2.setText("欢迎使用本教务人事管理系统！");

        sayHelloL1.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N

        inputTeacherIdL.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        inputTeacherIdL.setText("按员工编号查询：");

        inputTeacherIdT.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N

        idQueryB.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        idQueryB.setText("查询");
        idQueryB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idQueryBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sayHelloL2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sayHelloL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(selectDepartL, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectDepartmentComboB, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(inputTeacherIdL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputTeacherIdT, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(idQueryB, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPaneTeacherInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectDepartmentComboB, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectDepartL, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(inputTeacherIdT, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(inputTeacherIdL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(sayHelloL1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idQueryB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sayHelloL2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneTeacherInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        teacherIDL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherIDL.setText("员工编号：");

        teacherIDT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherIDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherIDTActionPerformed(evt);
            }
        });

        teacherSchoolL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherSchoolL.setText("毕业院校：");

        teacherSchoolT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N

        techarIndateL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        techarIndateL.setText("入职时间：");

        techarIndateT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        techarIndateT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techarIndateTActionPerformed(evt);
            }
        });

        techarNameL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        techarNameL.setText("姓名：");

        techarNameT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        techarNameT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techarNameTActionPerformed(evt);
            }
        });

        techarTechL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        techarTechL.setText("专业：");

        techarTechT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techarTechTActionPerformed(evt);
            }
        });

        teacherDepartL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherDepartL.setText("部门：");

        teacherDepartT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherDepartTActionPerformed(evt);
            }
        });

        teachBirthdayL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teachBirthdayL.setText("出生日期：");

        teachBirthdayT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teachBirthdayT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachBirthdayTActionPerformed(evt);
            }
        });

        teacherAddressL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherAddressL.setText("家庭地址：");

        teacherAddressT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherAddressT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherAddressTActionPerformed(evt);
            }
        });

        teacherDutyL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherDutyL.setText("岗位：");

        teacherDutyT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherDutyT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherDutyTActionPerformed(evt);
            }
        });

        teacherSexL.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherSexL.setText("性别：");

        teacherSexT.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        teacherSexT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherSexTActionPerformed(evt);
            }
        });

        addTeacherB.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        addTeacherB.setText("入职新员工");
        addTeacherB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherBActionPerformed(evt);
            }
        });

        delTeacherB.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        delTeacherB.setText("员工离职");
        delTeacherB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delTeacherBActionPerformed(evt);
            }
        });

        modifyTeacherB.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        modifyTeacherB.setText("信息修改");
        modifyTeacherB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyTeacherBActionPerformed(evt);
            }
        });

        ExitManagementB.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        ExitManagementB.setText("退出管理");
        ExitManagementB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitManagementBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(delTeacherB, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(modifyTeacherB, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(ExitManagementB)
                        .addGap(101, 101, 101))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(teacherSchoolL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teacherSchoolT))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(techarIndateL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addTeacherB)
                                        .addComponent(techarIndateT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(teacherIDL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(teacherIDT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(teacherDepartL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(teacherDepartT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(techarTechL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(techarTechT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(techarNameL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(techarNameT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(teacherAddressL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teacherAddressT))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(teachBirthdayL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teachBirthdayT, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(teacherSexL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teacherSexT, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(teacherDutyL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(teacherDutyT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(teacherIDL)
                                .addComponent(teacherIDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(teacherSchoolL)
                                .addComponent(teacherSchoolT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(techarIndateL)
                                .addComponent(techarIndateT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(teacherSexL)
                                    .addComponent(teacherSexT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(teachBirthdayL)
                                    .addComponent(teachBirthdayT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(teacherAddressL)
                                .addComponent(teacherAddressT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(teacherDutyL)
                                .addComponent(teacherDutyT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(2, 2, 2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(techarNameL)
                            .addComponent(techarNameT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(techarTechL)
                            .addComponent(techarTechT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teacherDepartL)
                            .addComponent(teacherDepartT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTeacherB, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ExitManagementB, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                        .addComponent(delTeacherB, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                        .addComponent(modifyTeacherB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void teacherIDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherIDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherIDTActionPerformed

    private void techarIndateTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techarIndateTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_techarIndateTActionPerformed

    private void techarNameTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techarNameTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_techarNameTActionPerformed

    private void techarTechTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techarTechTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_techarTechTActionPerformed

    private void teacherDepartTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherDepartTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherDepartTActionPerformed

    private void teachBirthdayTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachBirthdayTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teachBirthdayTActionPerformed

    private void teacherAddressTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherAddressTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherAddressTActionPerformed

    private void teacherDutyTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherDutyTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherDutyTActionPerformed

    private void teacherSexTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherSexTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherSexTActionPerformed

    private void selectDepartmentComboBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDepartmentComboBActionPerformed
        DepartmentAction departmentAction = new DepartmentAction();
        String departmentID = departmentAction.findDepartmentIDByDepartmentName((String) this.selectDepartmentComboB.getSelectedItem());
        System.out.println("要查询的部门ID是" + departmentID);
        
        TeacherAction teacherAction = new TeacherAction();
        if("".equals(departmentID))
            teacherList = teacherAction.findAllTeachers();
        else
            teacherList = teacherAction.findTeachersByDepartmentID(departmentID);
        
        System.out.println("查到该部门人数是" + teacherList.size());
        
        DefaultTableModel defaultTableModel1 = new DefaultTableModel();
        defaultTableModel1.setColumnCount(0);
        defaultTableModel1.setRowCount(0);
        
        //添加表头
        defaultTableModel1.addColumn("员工编号");
        defaultTableModel1.addColumn("姓名");
        defaultTableModel1.addColumn("性别");
        defaultTableModel1.addColumn("毕业学校");
        defaultTableModel1.addColumn("专业");
        
        TeacherInfoBean teacherinfo = null;
        int i = 0;
        if(teacherList != null) {
            Iterator it = teacherList.iterator();
            while(it.hasNext()) {
                defaultTableModel1.setNumRows(i + 1);
                teacherinfo = (TeacherInfoBean)it.next();
                defaultTableModel1.setValueAt(teacherinfo.getTeacherId(), i, 0);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherName(), i, 1);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherSex(), i, 2);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherSchool(), i, 3);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherTech(), i, 4);
                i++;
            }
        }else 
            System.out.println("按部门查找教师信息时出错");
        this.TeacherInfoT.setModel((TableModel)defaultTableModel1);
    }//GEN-LAST:event_selectDepartmentComboBActionPerformed

    private void addTeacherBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherBActionPerformed
       AddTeacherFrame addTeacherFrame =  new AddTeacherFrame();
       addTeacherFrame.setVisible(true);
    }//GEN-LAST:event_addTeacherBActionPerformed

    private void delTeacherBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delTeacherBActionPerformed
        DelTeacherFrame delTeacherFrame = new DelTeacherFrame();
        delTeacherFrame.setVisible(true);
    }//GEN-LAST:event_delTeacherBActionPerformed

    private void modifyTeacherBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyTeacherBActionPerformed
        ModifyTeacherFrame modifTeacherFrame = new ModifyTeacherFrame();
        modifTeacherFrame.setVisible(true);
    }//GEN-LAST:event_modifyTeacherBActionPerformed

    private void ExitManagementBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitManagementBActionPerformed
        this.setVisible(false);
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
    }//GEN-LAST:event_ExitManagementBActionPerformed

    private void idQueryBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idQueryBActionPerformed
        TeacherAction teacherAction = new TeacherAction();
        String teacherId = this.inputTeacherIdT.getText().trim();
        System.out.println("要查询的员工编号是" + teacherId);
        
        if(teacherId.equals("")) {
            JOptionPane.showMessageDialog(null, "<html><font Color='red'>员工编号为空，请输入将员工编号再查询" ,"提示", JOptionPane.INFORMATION_MESSAGE);
            this.inputTeacherIdT.setText("");
        } else {
            TeacherInfoBean teacherinfo = new TeacherInfoBean();
            teacherinfo = teacherAction.findTeacherByTeacherID(teacherId);
            if(teacherinfo == null) {
                JOptionPane.showMessageDialog(null, "<html><font Color='red'>该员工编号不存在" ,"错误", JOptionPane.ERROR_MESSAGE);
                this.inputTeacherIdT.setText("");
            } else {
                DefaultTableModel defaultTableModel1 = new DefaultTableModel();
                defaultTableModel1.setColumnCount(0);
                defaultTableModel1.setRowCount(0);

                //添加表头
                defaultTableModel1.addColumn("员工编号");
                defaultTableModel1.addColumn("姓名");
                defaultTableModel1.addColumn("性别");
                defaultTableModel1.addColumn("毕业学校");
                defaultTableModel1.addColumn("专业");
                
                defaultTableModel1.setNumRows(1);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherId(), 0, 0);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherName(), 0, 1);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherSex(), 0, 2);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherSchool(), 0, 3);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherTech(), 0, 4);
                this.TeacherInfoT.setModel((TableModel)defaultTableModel1);
                this.teacherList.clear();
                this.teacherList.add(teacherinfo);
                
                this.teacherIDT.setText(teacherinfo.getTeacherId());
                this.techarNameT.setText(teacherinfo.getTeacherName());
                this.teachBirthdayT.setText(teacherinfo.getTeacherBirthday());
                this.teacherSexT.setText(teacherinfo.getTeacherSex());
                this.teacherSchoolT.setText(teacherinfo.getTeacherSchool());
                this.techarTechT.setText(teacherinfo.getTeacherTech());
                this.teacherAddressT.setText(teacherinfo.getTeacherAddress());
                this.techarIndateT.setText(teacherinfo.getTeacherIndate());
                DepartmentAction departmentAction = new DepartmentAction();
                this.teacherDepartT.setText(departmentAction.findDepartmentNameByDepartmentID(teacherinfo.getTeacherDepartment()));
                this.teacherDutyT.setText(teacherinfo.getTeacherDuty());
             }
        }
    }//GEN-LAST:event_idQueryBActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() { 
            public void run() {
                //限制自启，只能通过LoginFrame启动,而且没有登录用户的参数
                User user = new User("001","111111");
                new ManageFrame(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExitManagementB;
    private javax.swing.JTable TeacherInfoT;
    private javax.swing.JButton addTeacherB;
    private javax.swing.JButton delTeacherB;
    private javax.swing.JButton idQueryB;
    private javax.swing.JLabel inputTeacherIdL;
    private javax.swing.JTextField inputTeacherIdT;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPaneTeacherInfo;
    private javax.swing.JButton modifyTeacherB;
    private javax.swing.JLabel sayHelloL1;
    private javax.swing.JLabel sayHelloL2;
    private javax.swing.JLabel selectDepartL;
    private javax.swing.JComboBox<String> selectDepartmentComboB;
    private javax.swing.JLabel teachBirthdayL;
    private javax.swing.JTextField teachBirthdayT;
    private javax.swing.JLabel teacherAddressL;
    private javax.swing.JTextField teacherAddressT;
    private javax.swing.JLabel teacherDepartL;
    private javax.swing.JTextField teacherDepartT;
    private javax.swing.JLabel teacherDutyL;
    private javax.swing.JTextField teacherDutyT;
    private javax.swing.JLabel teacherIDL;
    private javax.swing.JTextField teacherIDT;
    private javax.swing.JLabel teacherSchoolL;
    private javax.swing.JTextField teacherSchoolT;
    private javax.swing.JLabel teacherSexL;
    private javax.swing.JTextField teacherSexT;
    private javax.swing.JLabel techarIndateL;
    private javax.swing.JTextField techarIndateT;
    private javax.swing.JLabel techarNameL;
    private javax.swing.JTextField techarNameT;
    private javax.swing.JLabel techarTechL;
    private javax.swing.JTextField techarTechT;
    // End of variables declaration//GEN-END:variables
   
    /**
     * 表格选取相应事件
     * 当用户选取表格数据时会触发ListSelectionEvent,我们实现ListSelectionListener界面来处理这个事件
     * 即定义一个valueChanged方法
     */
    @Override
    public void valueChanged(ListSelectionEvent e) {
        DepartmentAction DepartmentAction = new DepartmentAction();
        int row = TeacherInfoT.getSelectedRow();//获取用户在TeacherInfoT中选择的行
        if(row < 0)
            row = 0;
        if(row >= 0 && this.teacherList.size() > 0) {
            TeacherInfoBean teacherInfo = (TeacherInfoBean)teacherList.get(row);
            this.teacherIDT.setText(teacherInfo.getTeacherId());
            this.techarNameT.setText(teacherInfo.getTeacherName());
            this.teachBirthdayT.setText(teacherInfo.getTeacherBirthday());
            this.teacherSexT.setText(teacherInfo.getTeacherSex());
            this.teacherSchoolT.setText(teacherInfo.getTeacherSchool());
            this.techarTechT.setText(teacherInfo.getTeacherTech());
            this.teacherAddressT.setText(teacherInfo.getTeacherAddress());
            this.techarIndateT.setText(teacherInfo.getTeacherIndate());
            this.teacherDepartT.setText(DepartmentAction.findDepartmentNameByDepartmentID(teacherInfo.getTeacherDepartment()));
            this.teacherDutyT.setText(teacherInfo.getTeacherDuty());
        }
    }

    private ArrayList initDepartComboBox() {
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        defaultComboBoxModel.addElement("全部");
        DepartmentAction departmentAction = new DepartmentAction();
        ArrayList  list = departmentAction.findAllDepartments();
        Iterator it = list.iterator();
        while(it.hasNext()) {
            DepartmentInfoBean departmentinfo = (DepartmentInfoBean)it.next();
            defaultComboBoxModel.addElement(departmentinfo.getDepartmentName());
        }
        this.selectDepartmentComboB.setModel(defaultComboBoxModel);
        this.selectDepartmentComboB.setSelectedIndex(0);
        return list;
    }

    private ArrayList initTeacherTable() {
        TeacherAction teacherAction = new TeacherAction();
        ArrayList list = teacherAction.findAllTeachers();
        
        DefaultTableModel defaultTableModel1 = new DefaultTableModel();
        defaultTableModel1.setColumnCount(0);
        defaultTableModel1.setRowCount(0);
        
        //添加表头
        defaultTableModel1.addColumn("员工编号");
        defaultTableModel1.addColumn("姓名");
        defaultTableModel1.addColumn("性别");
        defaultTableModel1.addColumn("毕业学校");
        defaultTableModel1.addColumn("专业");
        
        TeacherInfoBean teacherinfo = null;
        int i = 0;
        if(list != null) {
            Iterator it = list.iterator();
            while(it.hasNext()) {
                defaultTableModel1.setNumRows(i + 1);
                teacherinfo = (TeacherInfoBean)it.next();
                defaultTableModel1.setValueAt(teacherinfo.getTeacherId(), i, 0);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherName(), i, 1);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherSex(), i, 2);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherSchool(), i, 3);
                defaultTableModel1.setValueAt(teacherinfo.getTeacherTech(), i, 4);
                i++;
            }
        }else 
            System.out.println("初始化教师信息表时出错");
        this.TeacherInfoT.setModel((TableModel)defaultTableModel1);
        
        //设置表格选取以列为单位
        TeacherInfoT.setCellSelectionEnabled(true);
        //取得TeacherInfoT的ListSelectionModel
        selectionMode = TeacherInfoT.getSelectionModel();
        //设置为单选模式
        selectionMode.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        TeacherInfoT.revalidate();
        selectionMode.addListSelectionListener(this);
        return list;
    }
}
